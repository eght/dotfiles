* org-mode
  最強のタスク管理ツール.

  Manual
  - http://orgmode.org/org.html

  こまったらここを見れば日本語訳がある
  - http://orgmode.jp/
 
* 一般的な設定
  - C-c C-h helm-descbind
  
#+begin_src emacs-lisp
(use-package org-install
  :mode ("\\.org$"  . org-mode)
  :bind  (("C-c a" . org-agenda)
	  ("C-c c" . org-capture)
;;	  ("C-c b" . org-iswitchb) -> helm-descbinds へあげる.
	  ("C-c l" . org-store-link)
	  ("C-c C-x C-@" . org-clock-out) ;; tmux で C-o は利用しているため
	  ("C-c C" . cfw:open-org-calendar)
	  ("C-c C-x C-z" . org-resolve-clocks)
	  ("C-c C-x C-g" . org-clock-goto))
  :init
  ;; ここが init である理由は, init.el ですでに org を load しているから.
  
  ;; C-o の置き換え tmux で c-o は使っているので
  (define-key org-mode-map "\C-co" 'org-open-at-point)

  ;; RET でリンクを追う.
  (setq org-return-follows-link t))
#+end_src

** Formatting
   M-x org-emphasize で選択できる. 
   
   C-c C-x C-f ([[http://orgmode.org/manual/Emphasis-and-monospace.html][Emphasis and monospace - The Org Manual]])
   
   - *test* Bold
   - /test/ Itaric
   - _test_ Underline
   - =text= Code
   - +text+ Delete
   - ~test~ Small

   色やフォントなどの CSS を指定する場合は, HTML を直接かく.
   - [[http://stackoverflow.com/questions/21340380/exporting-org-mode-to-html-in-place-coloring][emacs - Exporting org-mode to HTML: In-place coloring - Stack Overflow]]
   - [[http://orgmode.org/manual/Quoting-HTML-tags.html][Quoting HTML tags - The Org Manual]]

   ここに macro がたくさん定義されている. 後で調査.
   - https://github.com/fniessen/org-macros

** org-mode の src を目立たせる設定
   org-mode の src を目立たせる設定. 
   - [[http://orgmode.org/worg/org-contrib/babel/examples/fontify-src-code-blocks.html][Pretty fontification of source code blocks]]

#+begin_src emacs-lisp
(setq org-src-fontify-natively t)
(setq org-fontify-whole-heading-line t)
#+end_src

** スタートアップ設定
   - [[http://orgmode.org/manual/In_002dbuffer-settings.html][In-buffer settings - The Org Manual]]

#+begin_src emacs-lisp
;; アスタリスクはかくす
(setq org-hide-leading-stars t)

;; 初期状態は見出しを表示
(setq org-startup-folded 'content)

;; (setq org-indent-mode t)

;; 折り返さない
;; (setq org-startup-truncated nil)
#+end_src

** org-open-link を dired で
   - http://sheephead.homelinux.org/

#+begin_src emacs-lisp
(org-add-link-type "file+emacs+dired" 'org-open-file-with-emacs-dired)
(add-hook 'org-store-link-functions 'org-dired-store-link)

(defun org-open-file-with-emacs-dired (path)
  "Open in dired."
  (let ((d (file-name-directory path))
    (f (file-name-nondirectory path)))
    (dired d)
    (goto-char (point-min))
    (search-forward f nil t)))

(defun org-dired-store-link ()
  "Store link to files/directories from dired."
  (use-package dired-x)
  (when (eq major-mode 'dired-mode)
    (let* ((f (dired-filename-at-point))
           (link (concat "file+emacs+dired" ":" f))
           (desc (concat f " (dired)")))
      (org-add-link-props :link link :description desc)
      link)))
#+end_src

** org-mode での移動 with hydra

#+begin_src emacs-lisp
(defhydra hydra-outline (org-mode-map "C-c")
  "outline"
  ("C-n" outline-next-visible-heading "next head")
  ("C-p" outline-previous-visible-heading "previous head"))
#+end_src

* GTD
  参考:
  - http://hpcgi1.nifty.com/spen/index.cgi?OrgMode%2fOrganize_Your_Life_In_Plain_Text!#i9
  - [[http://hpcgi1.nifty.com/spen/index.cgi?OrgMode%2FOrg-mode%A4%C7GTD%BC%C2%C1%A9%A1%CA%CB%DD%CC%F5%A1%CB#i16][OrgMode/Org-mode で GTD 実践 (翻訳) - How I use Emacs and Org-mode to implement GTD の翻訳]]

** org-agenda
#+begin_src emacs-lisp
;; 時間表示が 1 桁の時, 0 をつける
(setq org-agenda-time-leading-zero t)

;; 祝日を利用しない
(setq calendar-holidays nil)

;; DONE の時刻を記録
(setq org-log-done 'time)

;; スケジュールやデッドラインアイテムは DONE になっていれば表示する
(setq org-agenda-skip-deadline-if-done nil)
(setq org-agenda-skip-scheduled-if-done nil)

;; セレクションメニューから状態の変更を行えるようにする
(setq org-use-fast-todo-selection t)

;; default で logbook を表示
(setq org-agenda-include-inactive-timestamps t)

;; default で 時間を表示
(setq org-agenda-start-with-log-mode t)

;;; 一ヶ月分を表示
(setq org-agenda-span 30)

;;アジェンダの clockreport 用パラメータ
(setq org-agenda-clockreport-parameter-plist
      '(:maxlevel 5 :block t :tstart t :tend t :emphasize t :link t :narrow 80 :indent t :formula nil :timestamp t :level 5 :tcolumns nil :formatter nil))

;; カスタムコマンド
;; http://orgmode.org/worg/org-tutorials/org-custom-agenda-commands.html
(setq org-agenda-custom-commands 
      '(
      ;; http://hpcgi1.nifty.com/spen/index.cgi?OrgMode%2FOrg-mode%A4%C7GTD%BC%C2%C1%A9%A1%CA%CB%DD%CC%F5%A1%CB#i16
       ("D" "Daily Action Summary"
        ((agenda "" 
	((org-agenda-ndays 1)
	(org-agenda-entry-types '(:timestamp :sexp))
	))
	(tags-todo "next"))
	)
       ("d" "Daily Action List Detail"
        ((agenda "" ((org-agenda-ndays 1)
        (org-agenda-sorting-strategy
        (quote ((agenda time-up priority-down tag-up) )))
	;; (org-deadline-warning-days 0)
	;; (org-agenda-clockreport-mode t) ;; 時間表の表示はコメントアウト
        ))))
       ("n" "Next Action List" tags-todo "next" ((org-agenda-prefix-format " %6e ")))
       ("a" "Agenda and all TODO's"
        ;;((tags "project-CLOCK=>\"<today>\"|repeatable") (agenda "") (alltodo)))
        ((tags "project-CLOCK=>\"<today>\"|repeatable") (agenda "")))
       ))
#+end_src

*** アジェンダ表示の対象ファイル
#+begin_src emacs-lisp
(setq org-agenda-files '("~/gtd/main.org"
                         "~/gtd/inbox.org"
                         "~/gtd/journal/journal.org"
                         "~/gtd/habits.org"))

;; (setq org-agenda-file-regexp "\\`[^.].*\\.org'\\|[0-9]+.org$")

;; ショートカットを作成
;; もしすでにひらいているときは, 切り替えめる
(defun org-gtd-open-main ()
  (interactive)
  (find-file "~/gtd/main.org"))
(bind-key "C-<f6>" 'org-gtd-open-main)
#+end_src

*** agenda speedup
    - [[http://orgmode.org/worg/agenda-optimization.html][Agenda speedup and optimization]]
    - [[http://orgmode.org/manual/Speeding-up-your-agendas.html][Speeding up your agendas - The Org Manual]]
    - [[http://rubikitch.com/2014/11/29/org-agenda-cache/][【もう遅くない】 Emacs org-agenda による予定表を瞬時に表示させる方法 ]]

#+begin_src emacs-lisp
;; Inhibit the dimming of blocked tasks:
(setq org-agenda-dim-blocked-tasks nil)

;; Inhibit agenda files startup options:
(setq org-agenda-inhibit-startup nil)

;; Disable tag inheritance in agenda:
(setq org-agenda-use-tag-inheritance nil)
#+end_src

*** agenda default

#+begin_src emacs-lisp
(defun org-agenda-default ()
  (interactive)
  (org-agenda nil "a")
  (delete-other-windows))
(global-set-key (kbd "C-<f5>") 'org-agenda-default)

(setq org-agenda-restore-windows-after-quit t)
(setq org-agenda-sticky nil)
#+end_src

*** agenda full screen
    agenda の full screen.

  - [[http://kyleam.com/posts/org-agenda-fullscreen/][org-agenda-fullscreen]]

#+begin_src emacs-lisp
;; (defadvice org-agenda-list (around org-agenda-fullscreen activate)
;;   "Start agenda in fullscreen.
;;  
;; After agenda loads, delete other windows.
;; `org-agenda-restore-windows-after-quit' should non-nil to restore
;; the previous window configuration. If `org-agenda-sticky' is
;; non-nil, configurations with more than one window do not seem to
;; be restored properly."
;;   ad-do-it
;;   (delete-other-windows))
#+end_src

*** column
    C-c C-c するとでる.
    - http://orgmode.org/worg/org-tutorials/org-column-view-tutorial.html

#+begin_src emacs-lisp
; global Effort estimate values
(setq org-global-properties (quote ((
      "Effort_ALL" . "00:05 00:10 00:15 00:30 01:00 01:30 02:00 02:30 03:00"))))

;; カラムビューで表示する項目
; Set default column view headings: Task Effort Clock_Summary
(setq org-columns-default-format "%50ITEM(Task) %17Effort(Effort){:} %10CLOCKSUM")

;; 見つもり合計
(setq org-agenda-columns-add-appointments-to-effort-sum t)
#+end_src

** タスクの状態
   うまく動作しないので, 利用しないことにする.

*** 定義
    基本の状態は以下.

   - TODO: Default
   - DONE: Done 
   - NEXT: Next Action
   - WAIT: Wait for  
   - SOME: Some Day

   #+begin_src emacs-lisp
(setq org-todo-keywords '((sequence "TODO" "DONE")))
;; (setq org-todo-keywords (quote (
;;  (sequence "TODO (t)" "NEXT (n)" "DONE (d)")
;;  (sequence "WAIT (w)" "SOME (s)")
;;  )))

;; (setq org-todo-keyword-faces (quote (
;;  ("TODO" :foreground "red" :weight bold)
;;  ("NEXT" :foreground "orange" :weight bold)
;;  ("DONE" :foreground "forest green" :weight bold)
;;  ("REMINER" :foreground "forest green" :weight bold)
;;  ("WAITING" :foreground "brown" :weight bold)
;;  ("SOMEDAY" :foreground "yellow" :weight bold)
;;  )))
#+end_src

** TODO Next Action
   - http://qiita.com/takaxp/items/4dfa11a81e18b29143ec

#+begin_src emacs-lisp
(defvar my-next-tag "next")
(defvar my-unplan-tag "unplan")

(setq org-tag-faces '(("next" :foreground "orange")))

;; Next タグをトグルする
(defun my-toggle-next-tag ()
  (interactive)
  (when (eq major-mode 'org-mode)
    (save-excursipon
      (save-restriction
        (unless (org-at-heading-p)
          (outline-previous-heading))
        (if (string-match (concat ":" my-next-tag ":") (org-get-tags-string))
            (org-toggle-tag my-next-tag 'off)
          (org-toggle-tag my-next-tag 'on))
        (org-reveal)))))

;; うまくうごかないので, 封印
;; (defun my-toggle-tag (my-tag)
;;   (interactive)
;;   (when (eq major-mode 'org-mode)
;;     (save-excursion
;;       (save-restriction
;;         (unless (org-at-heading-p)
;;           (outline-previous-heading))
;;         (if (string-match (concat ":" my-tag ":") (org-get-tags-string))
;;             (org-toggle-tag my-tag 'off)
;;           (org-toggle-tag my-tag 'on))
;;         (org-reveal)))))

;; (defun my-toggle-next-tag ()
;;   my-toggle-tag ("next"))

;; (defun my-toggle-unplan-tag ()
;;   my-toggle-tag (my-unplan-tag))

(global-set-key (kbd "C-x <f2>") 'my-toggle-next-tag)
;;(global-set-key (kbd "C-x <f3>") 'my-toggle-unplan-tag)
#+end_src

** next タグの除去
#+begin_src emacs-lisp
(setq org-todo-state-tags-triggers
      (quote (("DONE" ("next")))))
#+end_src

** DONE をすべてアーカイブ
#+begin_src emacs-lisp
  (defun my-org-archive-done-tasks ()
    (interactive)
    (org-map-entries 'org-archive-subtree "/DONE" 'file))
#+end_src

** org-clock
  org-clock. org-mode での時間管理.
  - http://orgmode.org/manual/Resolving-idle-time.html#Resolving-idle-time

#+begin_src emacs-lisp
;; Resume clocking task on clock-in if the clock is open
(setq org-clock-in-resume t)

;; Sometimes I change tasks I'm clocking quickly
;; - this removes clocked tasks with 0:00 duration
(setq org-clock-out-remove-zero-time-clocks t)

;; clock out when moving task to a done state
;; タスクが完了した時に時間測定も停止する
(setq org-clock-out-when-done t)

;; なんか, org-mode を開くときに遅いので封印する.
;;
;; Save the running clock and all clock history
;; when exiting Emacs, load it on startup
;; Emacs が再起動したときにタスクの時間計測を再開する
;; Emacs が終了する時に測定中の計測と全ての測定履歴を保存する
;; http://orgmode.org/manual/Clocking-work-time.html
;; (setq org-clock-persist 'history)
;; emacs resume 時に時間計測再開
;; (org-clock-persistence-insinuate)

;; 空き時間の解決 
;; 半端時間を絶えずチェックしているファイルのリストは, M-x org-resolve-clocks
;; http://orgmode.org/manual/Resolving-idle-time.html#Resolving-idle-time
(setq org-clock-idle-time 20)

;: 時間測定の履歴数
(setq org-clock-history-length 36)

;; Do not prompt to resume an active clock
(setq org-clock-persist-query-resume nil)

;; Enable auto clock resolution for finding open clocks
(setq org-clock-auto-clock-resolution (quote when-no-clock-is-running))

;; Include current clocking task in clock reports
(setq org-clock-report-include-clocking-task t)

; 時間になったら音をならす
;;(setq org-clock-sound "/usr/share/sounds/LinuxMint/stereo/desktop-login.ogg")
;;(setq org-clock-sound t)
#+end_src

*** 必ず時間見積り
    一時無効
#+begin_src emacs-lisp
;; (defadvice org-clock-in (before is-set-effort-before-clock-in)
;;   (let ((effort (org-entry-get (point) "Effort")))
;;     (unless effort
;;       (error "[Error: Is not set a effort!]"))))
;; (ad-activate-regexp "is-set-effort-before-clock-in")
#+end_src

*** my/org-clockin-gtd
 指定したタスクを clockin するためのショートカット はじめてつくった自作 defun!!
 - http://orgmode.org/manual/Resolving-idle-time.html#Resolving-idle-time
 - https://github.com/danieroux/emacs/blob/master/external/bh-org-mode.el

#+begin_src emacs-lisp
(use-package my-org-clockin-gtd
  :bind (("C-<f7>" . mygtd:gtd)
	 ("C-<f8>" . mygtd:rest)
	 ("C-x <f8>" . mygtd:reset-rest-timer)))
;;  :init
;;  (with-eval-after-load 'org-pomodoro
;;    (add-hook 'org-pomodoro-finished-hook 'mygtd:rest)
;;    (add-hook 'org-pomodoro-break-finished-hook 'mygtd:reset-rest-timer)))
#+end_src

*** org-clock-by-tags
   タグごとに clocktable を集計.
    - http://stackoverflow.com/questions/17353591/timetable-grouped-by-tag
    - https://gist.github.com/tsu-nera/d9ffa6a51a6e7bdb957b

#+begin_src text
 宣言方法
  #+BEGIN: clocktable-by-tag :maxlevel 2 :tags ("p1" "p2")
                            :tstart "2013-06-27" :tend "2013-06-28"
#+end_src

#+begin_src emacs-lisp
(use-package clocktable-by-tag)
#+end_src

*** \emsp 対策: workaround
    It's workaround :(
    - [[https://www.mail-archive.com/emacs-orgmode@gnu.org/msg91791.html][Re: Alignment bug in clock tables]]

#+begin_src emacs-lisp
(eval-after-load "org-clock"
  '(defun org-clocktable-indent-string (level)
  (if (= level 1) ""
    (concat "\\" (let ((str " "))
      (dotimes (k (1- level) str)
        (setq str (concat "_" str))))))))
#+end_src

* org-capture
  アイデアをキャプチャーする.

  capture てんぷれの書き方
  - http://orgmode.org/manual/Template-expansion.html#Template-expansion

  注意: adjust-text.el との兼ね合いで, file+datetree が動かない. 様子見

#+begin_src emacs-lisp
(use-package org-capture
  :config
  (setq org-capture-templates
      '(
	("i" "Inbox" entry (file+datetree "~/gtd/inbox.org") "** TODO %?\n")
	("u" "Unplan" entry (file+datetree "~/gtd/unplan.org") "** TODO %? :unplan:\n")
	;; ("w" "Diary" entry (file+datetree "~/gtd/main.org") "** %T %?\n")
	("w" "Diary" entry (file+headline "~/gtd/main.org" "Diary") "**** %T %?\n")
	("k" "Clock-in" entry (clock) "* %T %?\n")
	;; calfw との連携 http://sheephead.homelinux.org/2014/03/15/7035/
        ;; ("m" "Memo" plain
	;;  (file (concat org-directory (format-time-string "/howm/%Y%m%d-%H%M%S.org")))
	;;  "* MEMO <%<%Y-%m-%d>> %?\n	 %i\n  %a\n\n"
	;;  :prepend t
	;;  :unnarrowed t
	;;  :kill-buffer t)
        ("m" "Memo" entry (file+headline "~/gtd/main.org" "Memo") "** %U%?\n%i\n")
	("e" "Email Todo" entry (file+headline "~/gtd/main.org" "Mails")
        "* TODO %^{Brief Description}\n%a\n%?Added: %U\n" :prepend t)
	("c" "calfw2org" entry (file "~/gtd/schedule.org") "*  %?\n %(cfw:org-capture-day)")
        )))
#+end_src

* org2blog
  Emacs から WordPress に投稿する Lisp
  - https://github.com/punchagan/org2blog
  - [[http://bach.istc.kobe-u.ac.jp/hatena/web/index.html][org ファイルの HTML エクスポート]]
  - [[http://www.geocities.jp/km_pp1/org-mode/org-mode-document.html][Org-mode による HTML 文書作成入門]]

#+begin_src emacs-lisp
(use-package org2blog-autoloads
  :config
  ;; パスワード設定
  (when linux-p
    (setq sternstunden (netrc-machine (netrc-parse "~/.netrc") "sternstunden" t))
    (setq everclassic (netrc-machine (netrc-parse "~/.netrc") "everclassic" t))
    (setq futurismo (netrc-machine (netrc-parse "~/.netrc") "futurismo" t))
    )
  (when windows-p
    (setq futurismo (netrc-machine (netrc-parse "c:/cygwin64/home/tsu-nera/.netrc") "futurismo" t))
    )

  ;; ブログ設定
  (setq org2blog/wp-blog-alist
        '(
        ("Futurismo"
         :url "http://futurismo.biz/xmlrpc.php"
	 :username "admin"
	 ;; :username (netrc-get futurismo "login")
	 ;; :password (netrc-get futurismo "password")
	 )
	("SternStunden"
	 :url "http://hmi-me.ciao.jp/sternstunden/xmlrpc.php"
	 :username "admin"         
	 ;; :username (netrc-get sternstunden "login")
	 ;; :password (netrc-get sternstunden "password")
	)
	("EverClassic"
	 :url "http://everclassic.biz/xmlrpc.php"
	 :username "admin"	 
	 ;; :username (netrc-get everclassic "login")
	 ;; :password (netrc-get everclassic "password")
         )
        )))
#+end_src

** WordPress で シンタックスハイライト
   SyntaxHighlighter Evolved Plugin を利用すればできるようだ.
   - [[http://vxlabs.com/2014/05/25/emacs-24-with-prelude-org2blog-and-wordpress/][Publish to WordPress with Emacs 24 and org2blog - vxlabs]]
   - [[http://blog.tmsrv.net/?p=82][tmaeda1981jp の blog » Blog Archive » org2blog を使用して Emacs から WordPress に投稿する]]
   - [[http://blog.binchen.org/posts/how-to-use-org2blog-effectively-as-a-programmer.html][How to use org2blog effectively as a programmer | Chen's blog]]

#+begin_src emacs-lisp
(setq org2blog/wp-use-sourcecode-shortcode t)
(setq org2blog/wp-sourcecode-default-params nil) ;; removed light="true"

;; target language needs to be in here
(setq org2blog/wp-sourcecode-langs
      '("actionscript3" "bash" "coldfusion" "cpp" "csharp" "css" "delphi"
        "erlang" "fsharp" "diff" "groovy" "javascript" "java" "javafx" "matlab"
        "objc" "perl" "php" "text" "powershell" "python" "ruby" "scala" "sql"
        "vb" "xml"
        "sh" "elisp" "lisp" "lua"
	"emacs-lisp" "c"))
 
;; this will use emacs syntax higlighting in your #+BEGIN_SRC
;; <language> <your-code> #+END_SRC code blocks.
;; 別のところで宣言
;; (setq org-src-fontify-natively t)
#+end_src


更新すると, 設定が消えた! syntaxhighlighter.php に追記する.

#+begin_src language
            // add myself
	    'elisp'         => 'clojure',
	    'emacs-lisp'    => 'clojure',
            'shell'         => 'sh',
            'language'      => 'text',            
#+end_src

** images
   画像ファイルは記事投稿時にサーバの upload フォルダに転送されるよう.

#+begin_src text
   # ./../img/2014-08-17-124249_785x456_scrot.png
   # http://futurismo.biz/wp-content/uploads/wpid-2014-08-17-124249_785x456_scrot.png
#+end_src

   scrot で撮影した画像を,以下のように書くことで記事に挿入することができる.

#+begin_src text
 [[file:/ ファイルパス]]
#+end_src

   ただし, リサイズはされない.外部コマンドと連携させる必要がある.
   ImageMagic というツールがよい.
   
   - [[http://sachachua.com/blog/2013/09/when-i-blog-with-emacs-and-when-i-blog-with-something-else/][When I blog with Emacs and when I blog with other tools]]
   - [[http://d.hatena.ne.jp/weblinuxmemo/20090929/p1][コマンドラインで画像を縮小する:ImageMagick convert mogrify - Linux Memo: Vine Linux 5 設定 tips]]
   - [[http://o.inchiki.jp/obbr/125][ImageMagick で画像をリサイズする時のメモ]]

   このサイトを参考に, 幅 670px, 高さ 447px に.

   - [[http://i-i-news.com/2014/08/eyecatch/#][最近ブログのアイキャッチ画像の作り方を確立したので, 自分がやっている方法を紹介します - iLOG]]
     
     #+begin_src bash
     convert -resize 640x480 before.jpg after.jpg
     convert -resize 670x447 before.jpg after.jpg
     #+end_src

   縦横比を計算してくれるつーる.
   - [[http://www.web-jozu.com/javascript/size.html][写真の縦横比を固定して拡大縮小値を計算するツール:JavaScript サンプル |WEB 上手]]


** 自動サムネイル挿入
   最大サイズの画像の中から自動でアイキャッチ画像を設定してくれる.
   - [[http://sachachua.com/blog/2014/10/publishing-wordpress-thumbnail-images-using-emacs-org2blog/#][Publishing Wordpress thumbnail images using Emacs and Org2Blog ]]

   どうもサイズが 300 にリサイズされてしまう.

#+begin_src emacs-lisp
;; (setq org2blog/wp-image-thumbnails t)
#+end_src

** org-export html で表が崩れる
   left 属性が設定されてしまうことが原因.

#+begin_src html
<th class="left"> xx </th>
<td class="left"> xx </td>
#+end_src

以下のように設定する.

#+begin_src emacs-lisp
(setq org-html-table-data-tags (quote ("<td>" . "</td>")))
(setq org-html-table-header-tags (quote ("<th scope=\"%s\">" . "</th>")))
#+end_src

* org-export
  org-mode から別形式へ. つまり, なんでも org-mode でよいということ.

  -[[http://orgmode.org/manual/Exporting.html#Exporting][Exporting - The Org Manual]]

  C-c C-e

  デフォルト以外を export 先ツールとして利用するためには, ox-xxx を require します.

  | ascii (ASCII format)           | ox-ascii.el     |
  | beamer (LaTeX Beamer format)   | ox-beamer.el    |
  | html (HTML format)             | ox-html.el      |
  | icalendar (iCalendar format)   | ox-icalendar.el |
  | latex (LaTeX format)           | ox-latex.el     |
  | man (Man page format)          | ox-man.el       |
  | md (Markdown format)           | ox-md.el        |
  | odt (OpenDocument Text format) | ox-odt.el       |
  | org (Org format)               | ox-org.el       |
  | texinfo (Texinfo format)       | ox-texinfo.el   |

** ox-wk
   dokuwiki 変換.

#+begin_src emacs-lisp
(use-package ox-wk :defer t)
#+end_src

** ox-mk
   markdown 変換

#+begin_src emacs-lisp
(use-package ox-md :defer t)
#+end_src

** org-textile
   - https://github.com/yashi/org-textile

#+begin_src emacs-lisp
(use-package ox-textile :defer t)
#+end_src

** 未使用中
*** ox-rst
   org-mode から reStructredText への変換

#+begin_src emacs-lisp
;; (use-package ox-rst)
#+end_src

*** ox-pandoc
   org-mode から reStructredText への変換. ox-rst を使うからいらないかも.

#+begin_src emacs-lisp
;; (use-package ox-pandoc)
;; (setq org-pandoc-output-format 'rst)
#+end_src

*** ox-taskjuggler
   TaskJuggler 変換.

#+begin_src emacs-lisp
;; (use-package ox-taskjuggler)
#+end_src

*** ox-freemind
   freemind もできるんだー.

   ただし, ArchLinux では freemind がとてもつかいにくい...

#+begin_src emacs-lisp
;; (use-package ox-freemind)
#+end_src

* org-babel
  org-babel で 実行した言語を書く. デフォルトでは emacs-lisp だけ.
  
#+begin_src emacs-lisp
(org-babel-do-load-languages
 'org-babel-load-languages
 '((R . t)
   (C . t)
   (java . t)
   (shell . t)
   (ledger . t)      
   )
 )
#+end_src

  評価するときにいちいち質問されないようにする.

#+begin_src emacs-lisp
(setq org-confirm-babel-evaluate nil)
#+end_src

  org-mode でファイルをひらくときに,inline-image があれば読み込み.

#+begin_src emacs-lisp
(add-hook 'org-babel-after-execute-hook 'org-display-inline-images)   
(add-hook 'org-mode-hook 'org-display-inline-images)   
#+end_src

** 出力方法
*** :results
    - [[http://orgmode.org/worg/org-contrib/babel/header-args.html][Header arguments and result types in Org Babel]]

**** raw    
   結果がコードにかかれる. ただし, tangle したときは無視される.
   - [[http://d.hatena.ne.jp/tamura70/20100310/org][Emacs org-mode を使ってみる: (35) org-babel-perl を使う 1/4 ]]

   #+begin_src text
   #+begin_src java :results raw
   #+end_src

**** code
   begin_src end_src で囲まれて出力される.

   ブログを書くときに便利.

*** :exports
    export するときの挙動をきめる.
    - :exports code
    - :exports results
    - :exports both
    - :exports none

    これで, 表を表示.
    =:results text :colnames yes :rownames yes=

    参考:
    - [[http://orgmode.org/manual/Exporting-code-blocks.html][Exporting code blocks - The Org Manual]]
    - [[http://orgmode.org/worg/org-contrib/babel/header-args.html][Header arguments and result types in Org Babel]]

** インタプリタ
   インタプリタをもつ言語では, :session hogehoge を記述することで,
   hogehoge バッファでセッションが開始する.

   なにがうれしいかというと, 複数の code block の間で,
   変数を共有することができる.

** java
   クラス名を指定する.
   - [[http://lists.gnu.org/archive/html/emacs-orgmode/2011-07/msg00946.html][Re:How-to evaluate Java-snippets in org-mode/org-babel?]]

   #+begin_src text
   #+begin_src java :classname packagename/classname
   #+end_src

** mmm-mode
   mmm-mode を利用すると, org-mode のなかに major-mode が共存できる.
   - https://github.com/purcell/mmm-mode
   - [[http://d.hatena.ne.jp/r_takaishi/20111101/1320161117][org-mode の内部で mmm-mode を使う - うどん駆動開発]]
   - [[http://1ikehen1ikechicken.sitemix.jp/][Emacser のホームページ]]

#+begin_src emacs-lisp
(use-package mmm-mode
  :config
  (setq mmm-global-mode 'maybe) ;; 自動推測
  ;; (setq mmm-global-mode 't) ;; つねに利用

  ;; (setq mmm-submode-decoration-level 2)
  (setq mmm-submode-decoration-level 1)

  ;; idle 中にパース.
  (setq mmm-parse-when-idle t)
  (setq mmm-idle-timer-delay 0.5)

  ;; (set-face-bold-p 'mmm-default-submode-face t) ;太字

  ;; 背景色
  (if (eq window-system nil)
  (set-face-background 'mmm-default-submode-face nil))
  
  (mmm-add-classes
   '((org-elisp
      :submode emacs-lisp-mode
      :front "#\\+begin_src emacs-lisp"
      :back  "#\\+end_src")))
  (mmm-add-mode-ext-class nil "\\.org\\'" 'org-elisp)

  (mmm-add-classes
   '((org-R
      :submode R-mode
      :front "^#\\+begin_src R[ \t]*\n?"
      :back "^#\\+end_src")))
  (mmm-add-mode-ext-class 'org-mode nil 'org-R))
#+end_src

** flycheck を動かす
   - see: [[http://www.wisdomandwonder.com/link/9573/how-to-correctly-enable-flycheck-in-babel-source-blocks][How to Correctly Enable Flycheck in Babel Source Blocks | Wisdom and Wonder]]
   
#+begin_src emacs-lisp
(defadvice org-edit-src-code (around set-buffer-file-name activate compile)
  (let ((file-name (buffer-file-name))) ;; (1)
    ad-do-it                            ;; (2)
    (setq buffer-file-name file-name))) ;; (3)
#+end_src

** org-babel-tangle をコマンドラインから実行
   see...
   - http://orgmode.org/manual/Batch-execution.html

   org-ext は外した.
   
#+begin_src bash
#!/bin/sh
# -*- mode: shell-script -*-
#
# tangle files with org-mode
#
DIR=`pwd`
FILES=""

# wrap each argument in the code required to call tangle on it
for i in $@; do
    FILES="$FILES \"$i\""
done

emacs -Q --batch \
    --eval "(progn
     (add-to-list 'load-path (expand-file-name \"~/src/org/lisp/\"))
     (add-to-list 'load-path (expand-file-name \"~/src/org/contrib/lisp/\" t))
     (require 'org) (require 'ob) (require 'ob-tangle)
     (mapc (lambda (file)
            (find-file (expand-file-name file \"$DIR\"))
            (org-babel-tangle)
            (kill-buffer)) '($FILES)))" 2>&1 |grep tangled
#+end_src

* org-narrow
 - C-x n s     (org-narrow-to-subtree) Narrow buffer to current subtre
 - C-x n b     (org-narrow-to-block) Narrow buffer to current block. 
 - C-x n w     (widen) Widen buffer to remove narrowing.

** org-tree-to-indirect-buffer
   C-c C-x b narrow
   - [[https://bruce-connor.github.io/emacs-online-documentation/Fun%2Forg-tree-to-indirect-buffer.html]]

* org-sparse-tree 
  検索語に関連するところだけを拾い読みするのに便利.
   - [[http://rubikitch.com/2014/10/10/org-sparse-tree-indirect-buffer/][Emacs org-mode の検索機能を 16 倍パワーアップする方法 | るびきち「日刊 Emacs 」]]

#+begin_src emacs-lisp
(defun org-sparse-tree-indirect-buffer (arg)
  (interactive "P")
  (let ((ibuf (switch-to-buffer (org-get-indirect-buffer))))
    (condition-case _
        (org-sparse-tree arg)
      (quit (kill-buffer ibuf)))))
(define-key org-mode-map (kbd "C-c \\") 'org-sparse-tree-indirect-buffer)
#+end_src

* org-screenshot
  スクリーンショットを撮影して, org-mode に挿入する 
  - https://github.com/dfeich/org-screenshot

* org-download
   ドラッグ & ドロップで画像をコピーできる.
   - https://github.com/abo-abo/org-download
   - [[http://oremacs.com/2015/01/18/sprucing-up-org-download/#][Sprucing up org-download · (or emacs]]

   動画もある. Awesome!!
   - https://www.youtube.com/watch?v=dAojpHR-6Uo

#+begin_src emacs-lisp
(use-package org-download
  :config
  ;; scrot をつかってる
  (setq org-download-screenshot-method "scrot"))
#+end_src

* org-table
* org-journal
  org-mode で簡単日記.
  - https://github.com/bastibe/org-journal

  使い方.
  - To create a new journal entry: C-c C-j
  - To open today's journal without creating a new entry: C-u C-c C-j

#+begin_src emacs-lisp
(use-package org-journal
  :bind ("C-c j" . org-journal-new-entry)
  :config
  (setq org-journal-date-format "%x")
  (setq org-journal-time-format "<%Y-%m-%d %R> ")
  ;; (setq org-journal-file-format "%Y%m%d.org")
  (setq org-journal-file-format "journal.org")
  (setq org-journal-dir "~/gtd/journal/"))
#+end_src

* org-pomodoro
  - https://github.com/lolownia/org-pomodoro

#+begin_src emacs-lisp
(use-package org-pomodoro
  :commands (custom-org-agenda-mode-defaults)
  :bind (("C-c C-x C-i" . org-pomodoro) ;; バインドできない (+_+)
         ("C-c C-x C-@" . org-pomodoro))
  :init
  (add-hook 'org-agenda-mode-hook 'custom-org-agenda-mode-defaults 'append)
  :config
  (setq org-pomodoro-play-start-sound t)
  (setq org-pomodoro-play-ticking-sounds nil)
  (setq org-pomodoro-audio-player "mplayer")

  ;; 3 分の休憩
  (setq org-pomodoro-short-break-length 3)
  
  (defun custom-org-agenda-mode-defaults ()
    (org-defkey org-agenda-mode-map "q" 'bury-buffer)
    (org-defkey org-agenda-mode-map "I" 'org-pomodoro)
    (org-defkey org-agenda-mode-map "O" 'org-pomodoro)
    (org-defkey org-agenda-mode-map (kbd "C-c C-x C-i") 'org-pomodoro)
    (org-defkey org-agenda-mode-map (kbd "C-c C-x C-@") 'org-pomodoro)))
#+end_src

* org-drill
  org-mode + 暗記.

  - [[http://d.hatena.ne.jp/lurdan/20131220/1387493894][冬休みを前に, 最強のフラッシュカードを手にしよう - *scratch*]]
  - [[http://orgmode.org/worg/org-contrib/org-drill.html][org-drill.el – flashcards and spaced repetition for org-mode]]

#+begin_src emacs-lisp
(use-package org-drill)
#+end_src
  
* 未使用中  
** org-weather
   org-agenda に天気を表示する
   - https://github.com/kautsig/org-weather

 #+begin_src emacs-lisp
(use-package org-weather
  :disabled t
  :init
  ;;(setq org-weather-format "Weather: %desc, %tmin-%tmax%tu, %p%pu, %h%hu, %s%su")
  (setq org-weather-format "Weather: %desc, %tmin-%tmax%tu")
  (setq org-weather-location "Tokyo,JP")
  (defun org-weather-browse ()
    (interactive)
    (browse-url "http://openweathermap.org/city/1850147"))
  :config
  (org-weather-refresh))
 #+end_src

** org-multiple-keymap
   n/p で 日付や priority を変更.
    - https://github.com/myuhe/org-multiple-keymap.el

 #+begin_src emacs-lisp
(use-package org-multiple-keymap :disabled t)
 #+end_src

** org-bullets
   org-mode のの見出しアイコンの変更.
   - https://github.com/sabof/org-bullets

   windows 環境だとド派手になるので封印.

 #+begin_src emacs-lisp
(use-package org-bullets
  :disabled t
  :init
  (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
 #+end_src

** interleave
   org-mode + PDF memo
   - https://github.com/rudolfochrist/interleave

 #+begin_src emacs-lisp
(use-package interleave :disabled t)
 #+end_src

* 他のツールとの連携
** RSS Feed 
  RSS Feeder for Emacs
  - http://orgmode.org/manual/RSS-Feeds.html
  - http://d.hatena.ne.jp/tamura70/20100225/org

#+begin_src emacs-lisp
(use-package org-feed
  :disabled t
  :config
  (defun org-feed-parse-rdf-feed (buffer)
    "Parse BUFFER for RDF feed entries.
Returns a list of entries, with each entry a property list,
containing the properties `:guid' and `:item-full-text'."
    (let (entries beg end item guid entry)
      (with-current-buffer buffer
	(widen)
	(goto-char (point-min))
	(while (re-search-forward "<item[> ]" nil t)
	((set  ) q beg (point)
	 end (and (re-search-forward "</item>" nil t)
		  (match-beginning 0)))
	(setq item (buffer-substring beg end)
	      guid (if (string-match "<link\\>.*?>\\(.*?\\)</link>" item)
		       (org-match-string-no-properties 1 item)))
	(setq entry (list :guid guid :item-full-text item))
	(push entry entries)
	(widen)
	(goto-char end))
	(nreverse entries))))
  
  (setq org-feed-retrieve-method 'wget)
  ;;(setq org-feed-retrieve-method 'curl)

  (setq org-feed-default-template "\n* %h\n  - %U\n  - %a  - %description")
)
#+end_src

*** 登録 feed
#+begin_src emacs-lisp
(use-package org-feed
  :disabled t
  :config
  (setq org-feed-alist nil)
  ;; (add-to-list 'org-feed-alist
  ;;   '("Futurismo" "http://futurismo.biz/feed"
  ;;     "~/org/rss.org" "Futurismo"
  ;;     :parse-feed org-feed-parse-rdf-feed))
  (add-to-list 'org-feed-alist
	       '("Publickey" "http://www.publickey1.jp/atom.xml"
		 "~/org/rss.org" "PublicKey")))
#+end_src

** Wanderlust
   wanderlust のメールを追跡できる.

#+begin_src emacs-lisp
(use-package org-wl)
#+end_src

** Plantuml

#+begin_src emacs-lisp
(when linux-p
  (setq org-plantuml-jar-path "/usr/local/bin/plantuml.jar")
  
(defun org-babel-plantuml-init ()
  (org-babel-do-load-languages
   'org-babel-load-languages
   (add-to-list 'org-babel-load-languages '(plantuml . t))))
(add-hook 'org-mode-hook 'org-babel-plantuml-init))

#+end_src

** Pandoc
   pandoc を利用すれば, 多彩なフォーマットを org-mode に変換可能だ.
   - [[http://futurismo.biz/archives/2403][org-mode で書いたテキストを Pandoc で Restructured Text に変換する | Futurismo]]
   - [[http://sky-y.github.io/site-pandoc-jp/users-guide/][Pandoc ユーザーズガイド 日本語版 - Japanese Pandoc User's Association]]

*** html2org
   Rubikichi さんの記事:
   - [[http://rubikitch.com/2014/10/07/pandoc-2/][Emacs ユーザならば Web ページを Pandoc で org-mode に変換して読もう るびきち「日刊 Emacs 」]]
   - [[http://rubikitch.com/2014/09/22/pandoc/][万能ドキュメント変換器 Pandoc いいね! | るびきち「日刊 Emacs 」]]

** calfw-org
   Emacs 用カレンダー.
   - [[https://github.com/kiwanami/emacs-calfw][kiwanami/emacs-calfw]]
   - [[http://d.hatena.ne.jp/kiwanami/20110723/1311434175][Emacs 用カレンダー calfw v1.2 リリース - 技術日記＠ kiwanami]]
   - [[http://d.hatena.ne.jp/kiwanami/20110619/1308495781][calfw の org-agenda 対応 calfw-org.el - 技術日記＠ kiwanami]]

   org-gcal と連携させることで,
   Google カレンダーと同期して, calfw で表示させることもできる.
   - [[http://sheephead.homelinux.org/2014/03/15/7035/][calfw と org-gcal の連携 | sheephead]]

#+begin_src emacs-lisp
(use-package calfw-org
  :config
  ;; 対象ファイル
  (setq cfw:org-icalendars '("~/gtd/schedule.org"))
  ;; First day of the week  0:Sunday, 1:Monday
  (setq calendar-week-start-day 1))
#+end_src

** org-gcal
   google calendar.
   - http://sheephead.homelinux.org/2014/03/14/7023/

   Google Developer Console で client-id と secret-key を取得する必要がある.
   - https://console.developers.google.com/project

   取得した情報は ~/.netrc に保存して読み出す.

   - org-gcal-fetch で同期

#+begin_src emacs-lisp
(use-package org-gcal
  :if linux-p
  :init
  (define-key cfw:calendar-mode-map "v" 'org-gcal-fetch)
  (define-key cfw:calendar-mode-map "&" 'browse-google-calendar)  
  :config
  ;; password は netrc へ
  (setq GoogleCal (netrc-machine (netrc-parse "~/.netrc") "org-gcal" t))
  (setq org-gcal-client-id (netrc-get GoogleCal "login")
	org-gcal-client-secret (netrc-get GoogleCal "password")
	org-gcal-dir "~/org"
	org-gcal-file-alist '(("fox10225fox@gmail.com" .  "~/gtd/schedule.org")))

  (defun browse-google-calendar ()
      (interactive)
      (browse-url "https://www.google.com/calendar/render?hl=ja")))
#+end_src

** R
   result で org-table を出力
   - [[http://emacs.stackexchange.com/questions/3819/org-code-block-receives-table-without-header][org mode - Org code block receives table without header - Emacs Stack Exchange]]

   Interacting with R
   - [[http://home.fnal.gov/~neilsen/notebook/orgExamples/org-examples.html#sec-19][Emacs org-mode examples and cookbook]]

** mobileOrg
   iPhone と org-mode の同期. Dropbox を利用
   - [[http://mobileorg.ncogni.to/][MobileOrg : What is MobileOrg?]]
   - https://github.com/MobileOrg/mobileorg
   - http://orgmode.org/manual/MobileOrg.html

   org-modbile は org-mode プロジェクトに含まれている.

#+begin_src emacs-lisp
;; Set to the location of your Org files on your local system
(setq org-directory "~/gtd")
;; Set to the name of the file where new notes will be stored
(setq org-mobile-inbox-for-pull "~/gtd/inbox.org")
;; Set to <your Dropbox root directory>/MobileOrg.
(setq org-mobile-directory "~/Dropbox/ アプリ/MobileOrg")

;; ;; 起動と終了時に同期
;; ;; org-mobile-directry が存在しないとハングするためなしにした
;; ;; そのうちなんか考える
;; ;; (add-hook 'after-init-hook 'org-mobile-pull)
;; ;; (add-hook 'kill-emacs-hook 'org-mobile-push)

;; moble sync
;; http://stackoverflow.com/questions/8432108/how-to-automatically-do-org-mobile-push-org-mobile-pull-in-emacs
(defvar org-mobile-sync-timer nil)
(defvar org-mobile-sync-idle-secs (* 60 10))
(defun org-mobile-sync ()
    (interactive)
      (org-mobile-pull)
	(org-mobile-push))
(defun org-mobile-sync-enable ()
    "enable mobile org idle sync"
      (interactive)
	(setq org-mobile-sync-timer
	      (run-with-idle-timer org-mobile-sync-idle-secs t
				   'org-mobile-sync)))
(defun org-mobile-sync-disable ()
    "disable mobile org idle sync"
      (interactive)
	(cancel-timer org-mobile-sync-timer))
(org-mobile-sync-enable)
#+end_src

* Bookmarks
  cookbook. 図の書き方とか R との連携とか, 小技がある.
  - [[http://home.fnal.gov/~neilsen/notebook/orgExamples/org-examples.html#sec-19][Emacs org-mode examples and cookbook]]

  PDF を org-mode で閲覧.
  - [[http://www.toryanderson.com/tech/emacs-study-pdf-conversion-and-editing][Emacs for Study: PDF Conversion and Editing | ToryAnderson.com]]
    
