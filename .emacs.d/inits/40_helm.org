* helm
  絞りこみインターフェイス.

  - https://github.com/emacs-helm

  ダウンロードしたら, make でコンパイルする.

  windows 環境で helm-autoloads がないと言われた時は,
  Cygwin を利用して make することで, autoloads ファイルを生成.

* 組み込み helm
  helm project にもとから入っているもの.
  - https://github.com/emacs-helm/helm
    
** Basic Setting 
#+begin_src emacs-lisp
(use-package helm-config
  :config
;;  (helm-autoresize-mode 1) ;; 検索結果によってリサイズ. default 40%
;;  (setq helm-autoresize-max-height 50)
#+end_src

#+begin_src emacs-lisp
(global-set-key (kbd "C-x C-r") 'helm-recentf) ;; 最近利用したファイルを検索
(global-set-key (kbd "M-y") 'helm-show-kill-ring) ;; 最近消したクリップボード履歴
(global-set-key (kbd "M-r") 'helm-occur) ;; バッファを検索
(global-set-key (kbd "M-x") 'helm-M-x) ;; M-X を 絞り込み
(global-set-key (kbd "C-x b") 'helm-mini)
(global-set-key (kbd "C-x C-b") 'helm-elscreen) ;; elscreen のタブを切り替え
(global-set-key (kbd "C-x C-f") 'helm-find-files)
(global-set-key (kbd "C-x c-b") 'helm-resume)

(define-key org-mode-map (kbd "C-c h") 'helm-org-in-buffer-headings)
(define-key prog-mode-map (kbd "C-c h") 'helm-imenu)
#+end_src

** helm-semantic-or-imenu
   imenu の強化版. helm-semantic-or-imenu C-x c i でバインドされている. 便利.

** helm-buffer-list
   default. バッファの絞り込み.
   - 絞りこみの文字列の先頭に@をつけることでバッファ内の文字列でしぼりこみ.
   - 絞りこみの文字列の先頭に/ をつければ, ディレクトリ名で絞りこみ.

#+begin_src emacs-lisp
;; (global-set-key (kbd "C-x b") 'helm-buffers-list)
#+end_src

   helm-mini へ.

** helm-all-mark-rings
   過去の global-mark を絞り込み. これは便利!

#+begin_src emacs-lisp
(global-set-key (kbd "M-SPC") 'helm-all-mark-rings)
#+end_src

** helm-bookmarks
   Nice Bookmarks.

  - [[http://tototoshi.hatenablog.com/entry/20101226/1293334388][Emacs のブックマーク機能 - tototoshi の日記]]
  - [[http://www.emacswiki.org/emacs/BookMarks][EmacsWiki: Book Marks]]

  C-x r b で helm-mode-bookmark-jump が発動するみたいなので, あえてキーバインドしない.

  - C-x r m' – set a bookmark at the current location (e.g. in a file)
  - C-x r b' – jump to a bookmark
  - C-x r l' – list your bookmarks
  - M-x bookmark-delete' – delete a bookmark by name これも helm が発
    動する.

** helm-net
   helm browse url and search web.
   - https://github.com/emacs-helm/helm/blob/master/helm-net.el

   3 種類の検索方法
   - helm-google-suggest
   - helm-yahoo-suggest
   - helm-wikipedia-suggest

** End of Helm Config

#+begin_src emacs-lisp
)
(helm-mode 1) ;; 基本的な設定はこれで実施される.
#+end_src
    
* 拡張 helm
  github から拾ってきたり, emacs-helm からとってきたもの.
  - https://github.com/emacs-helm

** helm-descbinds
   コマンド割り当てを調べる.
   - https://github.com/emacs-helm/helm-descbinds

#+begin_src emacs-lisp
(use-package helm-descbinds
  :bind ("C-c b" . helm-descbinds)
  :config
  (helm-descbinds-mode))
#+end_src

** helm-orgcard
   orgcard を引く.
   - https://github.com/emacs-helm/helm-orgcard

#+begin_src emacs-lisp
(use-package helm-orgcard
  :commands helm-orgcard
  :config (setq hoc-lang-selector 'ja))
#+end_src

** helm-ag
   ag 結果を helm で絞り込み. 
   - https://github.com/syohex/emacs-helm-ag

   - helm-resume (C-x c b) と組み合わせると便利.
   - helm-occur とつかいわけが悩ましい. 大きななファイルは ag がいいかな.
     - helm-ag-this-file

#+begin_src emacs-lisp
(use-package helm-ag
  :bind (("C-x g r" . helm-ag) ("C-x g f" . helm-ag-this-file))
  :config
  (setq helm-ag-base-command "ag --nocolor --nogroup --ignore-case")
  (setq helm-ag-thing-at-point 'symbol))
#+end_src

** helm-kaomoji
   顔文字.

   2ch 文字キラいなので, 変えた.
   
#+begin_src emacs-lisp
(use-package helm-kaomoji
  :bind* ("M-t y" . helm-kaomoji)
  :config
;;  (setq helm-kaomoji--url "http://kaosute.net/jisyo/pdf2.cgi?file=kaomoji_ver2&method=download")
  (setq helm-kaomoji--url "http://kaosute.net/jisyo/pdf2.cgi?file=hosoku_ver2&method=download")
  )
#+end_src

** helm-flyspell-collect
   すごく便利だったのに, 動かなくなった. . .
   - from:  https://gist.github.com/cofi/3013327
   - forked: https://gist.github.com/tsu-nera/2ac6ee1555bcf8597fa6

#+begin_src emacs-lisp
;; (eval-after-load 'flyspell
;;   '(use-package helm-flyspell-correct
;;      :disabled t
;;      :bind ("C-x g i" . helm-flyspell-correct)))
#+end_src

** helm-flyspell
   自前のものではなくて, こっちをつかったほうがいいか?? 
   - [[https://github.com/pronobis/helm-flyspell][pronobis/helm-flyspell]]

#+begin_src emacs-lisp
(use-package helm-flyspell
  :bind ("C-x g i" . helm-flyspell-correct))
#+end_src

** helm-swoop
   - [[https://github.com/ShingoFukuyama/helm-swoop][ShingoFukuyama/helm-swoop]]
   - [[http://rubikitch.com/2014/12/25/helm-swoop/][emacs helm-swoop.el : 【これはすごい】バッファ全体を Migemo 絞り込み検索して走り回れ!]]

#+begin_src emacs-lisp
(use-package helm-swoop
  :preface
  ;;; [2015-03-23 Mon]C-u C-s / C-u C-u C-s
  ;;; http://rubikitch.com/2015/03/23/helm-swoop-update/
  (defun isearch-forward-or-helm-swoop (use-helm-swoop)
    (interactive "p")
    (let (current-prefix-arg
          (helm-swoop-pre-input-function 'ignore))
      (call-interactively
       (case use-helm-swoop
         (1 'isearch-forward)
         (4 'helm-swoop)
         (16 'helm-swoop-nomigemo)))))
  :bind* ("M-o" . helm-swoop)
  :bind (("M-O" . helm-swoop-back-to-last-point)
        ("C-x M-o" . helm-multi-swoop)
        ("C-s" . isearch-forward-or-helm-swoop))
  ;;	 ("C-M-o" . helm-multi-swoop-all))
  :config
  ;; When doing isearch, hand the word over to helm-swoop
  (define-key isearch-mode-map (kbd "M-o") 'helm-swoop-from-isearch)
  ;; From helm-swoop to helm-multi-swoop-all
  (define-key helm-swoop-map (kbd "M-o") 'helm-multi-swoop-all-from-helm-swoop)
  ;; When doing evil-search, hand the word over to helm-swoop
  ;; (define-key evil-motion-state-map (kbd "M-i") 'helm-swoop-from-evil-search)

  ;; Save buffer when helm-multi-swoop-edit complete
  (setq helm-multi-swoop-edit-save t)

  ;; If this value is t, split window inside the current window
  (setq helm-swoop-split-with-multiple-windows nil)

  ;; Split direcion. 'split-window-vertically or 'split-window-horizontally
  (setq helm-swoop-split-direction 'split-window-vertically)

  ;; If nil, you can slightly boost invoke speed in exchange for text color
  (setq helm-swoop-speed-or-color nil)

  (define-key helm-swoop-map (kbd "C-s") 'swoop-action-goto-line-next)
  (define-key helm-swoop-map (kbd "C-r") 'swoop-action-goto-line-prnnev))
#+end_src

** helm-projectile
   - [[https://github.com/bbatsov/projectile/blob/master/helm-projectile.el][projectile/helm-projectile.el at master · bbatsov/projectile]]

#+begin_src emacs-lisp
(use-package helm-projectile
  :defer 20
  :config
  (helm-projectile-on)
  ;; プロジェクトに関連するファイルを helm-for-files に追加
  (defadvice helm-for-files (around update-helm-list activate)
    (let ((helm-for-files-preferred-list
	   (helm-for-files-update-list)))
      ad-do-it))
  
  (defun helm-for-files-update-list ()
    `(helm-source-buffers-list
      helm-source-recentf
      ;; helm-source-ghq
      helm-source-files-in-current-dir
      helm-source-file-cache
      ,(if (projectile-project-p)
	   helm-source-projectile-files-list)))

  ;; helm-ag をプロジェクトルートから
  (defun projectile-helm-ag ()
    (interactive)
    (helm-ag (projectile-project-root))))
#+end_src

** helm-gtags
   GNU Global.
   - [[https://github.com/syohex/emacs-helm-gtags][syohex/emacs-helm-gtags]]

   うーん, 動かない. . .error helm-process-delay-source

   動かないので, ggtags をつかう.

#+begin_src emacs-lisp
(use-package helm-gtags
  :disabled t
  :init
  ;;; Enable helm-gtags-mode
  (add-hook 'dired-mode-hook 'helm-gtags-mode)
  (add-hook 'eshell-mode-hook 'helm-gtags-mode)
  (add-hook 'c-mode-hook 'helm-gtags-mode)
  (add-hook 'c++-mode-hook 'helm-gtags-mode)
  (add-hook 'java-mode-hook 'helm-gtags-mode)

  :config
  ;; customize
  ;; customize
  (custom-set-variables
   '(helm-gtags-path-style 'relative)
   '(helm-gtags-ignore-case t)
   '(helm-gtags-auto-update t))
  
  ;; key bindings
  (define-key helm-gtags-mode-map (kbd "M-t") 'helm-gtags-find-tag)
  (define-key helm-gtags-mode-map (kbd "M-e") 'helm-gtags-find-rtag)
  (define-key helm-gtags-mode-map (kbd "M-s") 'helm-gtags-find-symbol)
;;  (define-key helm-gtags-mode-map (kbd "M-.") 'helm-gtags-dwin)
  (define-key helm-gtags-mode-map (kbd "M-,") 'helm-gtags-pop-stack))
#+end_src

** helm-wl-address
   helm i/f でアドレス検索. 
   - https://github.com/kenbeese/helm-wl-address
   - [[http://qiita.com/kenbeese/items/438c1c8d664198d8527f][Emacs - wanderlust のアドレスを helm で選択する - Qiita]]

   .addresses を作成すること.

#+begin_src emacs-lisp
(use-package helm-wl-address
  :init
  (add-hook 'wl-draft-mode-hook 'helm-wl-address-activate-tab))
#+end_src

** helm-google
   google 検索. 
   - https://github.com/steckerhalter/helm-google

   helm-resume と組み合わせるといい.

#+begin_src emacs-lisp
(use-package helm-google
  :bind
  ("C-x g s" . helm-google)
  :config
  (setq helm-google-tld "co.jp")
  ;; eww で表示
  (setq helm-source-google
	`((name . "Google")
	  (init . (lambda () (require 'google)))
	  (action ("Browse URL" . eww-browse-url))
	  (display-to-real . helm-google-display-to-real)
	  (candidates . helm-google-search)
	  (requires-pattern)
	  (nohighlight)
	  (multiline)
	  (volatile))))
#+end_src

** helm-flycheck

#+begin_src emacs-lisp
(use-package helm-flycheck
  :config
  (define-key flycheck-mode-map (kbd "C-c ! h") 'helm-flycheck))
#+end_src

** helm-bm
   - [[https://github.com/yasuyk/helm-bm][yasuyk/helm-bm · GitHub]]

#+begin_src emacs-lisp
(use-package helm-bm
  :bind ("C-x <f5>" . helm-bm))
#+end_src

** helm-make
   helm interface for make
   - https://github.com/abo-abo/helm-make

#+begin_src emacs-lisp
(use-package helm-make
  :init
  (eval-after-load 'makefile-mode
    '(define-key makefile-mode-map (kbd "M-\"") 'helm-make-projectile))
  (define-key c-mode-map (kbd "M-\"") 'helm-make-projectile)
  (define-key c++-mode-map (kbd "M-\"") 'helm-make-projectile))
#+end_src

** helm-migemo
   helm の日本語検索.
   - https://github.com/emacs-helm/helm-migemo

  うまく動かないので, パッチをあてる.
  - [[http://rubikitch.com/2014/12/19/helm-migemo/][emacs helm-migemo.el : helm で正しく Migemo を動作させる!]]

  migemo 対応していない場合は, helm-migemize-command で個別に追加.
  - [[http://aki2o.hatenablog.jp/entry/2013/09/05/anything/helm%E3%81%AEmigemo%E5%AF%BE%E5%BF%9C%E3%81%97%E3%81%A6%E3%81%AA%E3%81%84%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7migemo%E3%82%8A%E3%81%9F%E3%81%84%E6%99%82%E3%81%AB%E3%81%99%E3%81%B9%E3%81%8D][helm の migemo 対応してないコマンドで migemo りたい時にすべき設定方法 - 死ぬまでの暇潰し]]

  windows だと、うまくうごいてくれないな。。

  helm-esh-pcompile がうまく動かないので封印

#+begin_src emacs-lisp
(use-package helm-migemo
  :disabled t
  :if linux-p
  :config
  (setq helm-use-migemo t)
  (when emacs25.0-p
  (with-eval-after-load 'helm-imenu
    '(helm-migemize-command helm-imenu))
  (with-eval-after-load 'helm-org
    '(helm-migemize-command helm-org-in-buffer-headings))
  (with-eval-after-load 'swiper
    '(helm-migemize-command swiper)))
  (require 'my-patch-helm-migemo))
#+end_src

** helm-emms

#+begin_src emacs-lisp
(use-package helm-emms)
#+end_src

** helm-cscope
   xcscope の helm i/f.

#+begin_src emacs-lisp
(use-package helm-cscope
  :init
  (add-hook 'c-mode-hook 'helm-cscope-mode)
  (add-hook 'c++-mode-hook 'helm-cscope-mode)
  :config
  (define-key helm-cscope-mode-map (kbd "M-t") 'helm-cscope-find-symbol)
  (define-key helm-cscope-mode-map (kbd "M-r") 'helm-cscope-find-global-definition)
  (define-key helm-cscope-mode-map (kbd "M-g M-c") 'helm-cscope-find-called-function)
  (define-key helm-cscope-mode-map (kbd "M-g M-p") 'helm-cscope-find-calling-this-funtcion)
  (define-key helm-cscope-mode-map (kbd "M-s") 'helm-cscope-select))
#+end_src

** helm-hatena-bookmark
   - https://github.com/masutaka/emacs-helm-hatena-bookmark

#+begin_src emacs-lisp
(use-package  helm-hatena-bookmark
  :config
  (setq helm-hatena-bookmark-username "tsu-nera")
  (helm-hatena-bookmark:initialize))
#+end_src

** helm-dash
   API Reference. 
   - https://github.com/areina/helm-dash

   helm-dash-install-docset で辞書をインストール.

#+begin_src emacs-lisp
(use-package helm-dash)
#+end_src

** helm-ls-git
   どうも、これを利用すると、eieio-defclass-autoload error がでる. 

#+begin_src emacs-lisp
(use-package helm-ls-git
  :disabled t
  :bind ("C-x C-d" . helm-browse-project))
#+end_src

** ace-jump-helm-line
   helm 絞り込みを ace で. 
   - http://rubikitch.com/2015/04/16/ace-jump-helm-line/

#+begin_src emacs-lisp
(use-package ace-jump-helm-line
  :preface
  (defun ajhl--insert-last-char ()
    (insert (substring (this-command-keys) -1)))
  (defun ace-jump-helm-line--with-error-fallback ()
    "ヒント文字以外の文字が押されたらその文字を挿入するように修正"
    (interactive)
    (condition-case nil
	(ace-jump-helm-line)
      (error (ajhl--insert-last-char))))

  :config
  (define-key helm-map (kbd "!") 'ace-jump-helm-line))
  
  ;; anything-shortcut-keys-alist と同じように設定
  ;;(setq avi-keys (append "asdfghjklzxcvbnmqwertyuiop" nil)))
#+end_src

** helm-etags-plus
   - [[https://github.com/jixiuf/helm-etags-plus][jixiuf/helm-etags-plus]]
   C 言語では, これがまともに動く. gtags は動かない etags で TAGS を生成する.
   python も、gtags がつかえない!!

   - helm-etags-select C-x c e

#+begin_src emacs-lisp
(use-package helm-etags+
  :bind (("C-x c e" . helm-etags+-select)
         ("C-x c ," . helm-etags+-history-go-back)))
(use-package ctags-update)
#+end_src
** helm-github-stars
   helm i/f で github のスターを見る.
   - https://github.com/Sliim/helm-github-stars

#+begin_src emacs-lisp
(use-package helm-github-stars
  :config 
  (setq helm-github-stars-username "tsu-nera"))
#+end_src

* Action 追加
  helm で絞り込みのあと, TAB で Action 起動.
  - [[http://rubikitch.com/2015/02/02/helm-add-actions/][emacs helm にアクション・キーバインドを超簡単に追加する方法]]
  - https://gist.github.com/tsu-nera/9cfd449c0dc5d232f61f

  よくわからないな...あとで.
  
* 未使用中...

** swiper-helm
   Emacs isearch with an overview. 
   Interactive `occur' using `helm
   - [[http://oremacs.com/2015/03/10/no-swiping/][Introducing Swiper · (or emacs]]
   - https://github.com/abo-abo/swiper
   
   isearch + helm. helm-swoop と似ている.

   -> helm-swoop でいいや.

#+begin_src emacs-lisp
;;(use-package swiper-helm)
;;  :bind (("C-s". swiper-helm)))
#+end_src

** my/helm-recentf
   C-u C-x C-r で, ディレクトリのみを対象にする.
   - [[http://d.hatena.ne.jp/syohex/20120911/1347378503#][helm を使って最近開いたディレクトリを開く - Life is very short]]

   #+begin_src emacs-lisp
;;(defvar helm-c-recentf-directory-source
;;  '((name . "Recentf Directry")
;;    (candidates . (lambda ()
;;                    (loop for file in recentf-list
;;                          when (file-directory-p file)
;;                          collect file)))
;;    (type . file)))
;; 
;;(defun my/helm-recentf (arg)
;;  (interactive "P")
;;  (if current-prefix-arg
;;      (helm-other-buffer helm-c-recentf-directory-source "*helm recentf*")
;;      (call-interactively 'helm-recentf)))
   #+end_src


** helm-open-github
   helm i/f で github を開く.
   - https://github.com/syohex/emacs-helm-open-github   

#+begin_src emacs-lisp
(use-package helm-open-github :disabled t)
#+end_src

